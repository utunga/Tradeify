<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title></title>
</head>
<body>

<link href="../css/ooooby_theme/jquery.autocomplete.css" rel="stylesheet" type="text/css" media="all" />
<link href="../css/ooooby_theme/jquery-ui-1.7.2.custom.css" rel="stylesheet" type="text/css" media="all" />



<div id="tags_widget"></div>
<input type="text" class="ui-state-default ui-corner-all" id="typed_tag"/>
<button class="ui-button ui-state-default ui-corner-all" id="add_typed_tag">add</button>

<div id="selected_tags"></div>
<script type="text/javascript" src="../js/jquery-1.3.2.js"></script>
<script type="text/javascript" src="../js/jquery-ui-1.7.2.custom.min.js"></script>
<script type="text/javascript" src="../js/jquery.tools.min.js"></script>
<script type="text/javascript" src="../js/jquery.autocomplete.min.js"></script>
<script type="text/javascript" src="../js/tag_support.js"></script>
<script type="text/javascript" src="../osocial/widget_support.js"></script>
<script type="text/javascript" src="../osocial/mock_wrapper.js"></script><!--             un comment for running as part of widget_mock.html-->

<script type="text/javascript">

var suggested_tags;
var selected_tags;
var tags_widget;

var update_suggested_tags = function() {
    var json_url = selected_tags.decorate_url(container.tags_uri +"?type=tag");
    suggested_tags = new Array();
    $.getJSON(json_url, function(data) {
        $.each(data, function() {
            if (this.type == "tag") 
                suggested_tags.push(this.tag);
        });
        
        //rebuild the whole widget
        tags_widget = new TagsWidget("#tags_widget", suggested_tags, selected_tags, "tag", tags_widget_click);
    });
};

var tags_widget_click = function(tag_text, tag_type) {
    if (selected_tags.has_tag(tag_text)) {
        selected_tags.remove_tag(tag_text);
    }
    else {        
        selected_tags.add_tag(tag_text, tag_type);
    }
    update_suggested_tags();
}

// merge tags from the list of most common tags, given current selected tags
// with the lsit of hard coded suggested tags from hiarchy of categories
// to create 'suggested_tags'...

$(function() {
     $("#search_general_tag").autocomplete(container.tags_ahead_uri + "?type=tag");
     selected_tags = new Tags("#selected_tags");
     update_suggested_tags(); 
     $("#add_typed_tag").click(function() {
        var typed_tag_text = $("#typed_tag").val();
        selected_tags.add_tag(typed_tag_text, "tag");
        update_suggested_tags();
     });
});

//function queryGeneralTag(){
//    /*var queryIdx=$.inArray(query,search_tags);
//    if(queryIdx!=-1){	
//        return;
//    }*/
//    list_widget.add_filter(query, "tag");
//    //update_offers();
//}

//var selected_tags = [];
//var tags = [];
//var threshold = 200;
//var keyChangeStack = 0;

//function timeoutKeyChange() {
//    keyup(update_tags, threshold);
//    /*keyChangeStack++;
//    setTimeout(function() {
//    keyChangeStack--;
//    if (keyChangeStack == 0) {
//    update_tags();
//    }
//    }, threshold);*/
//}

//function ontag_click() {
//    var tagField = $("#tags").val();
//    var pushed_tag = $(this).html();
//    if ($.inArray(pushed_tag, selected_tags) <= -1) {
//        if (tagField != "")
//            $("#tags").val(tagField + " " + pushed_tag);
//        else $("#tags").val(pushed_tag);
//    }
//    else {
//        //var txt = new RegExp("(,\s*" + pushed_tag + "\s*)|(^\s*" + pushed_tag + "\s*,*)");
//        var replacementText = tagField.replace(pushed_tag, "");
//        $("#tags").val(replacementText);
//    }
//    update_tags();
//    update_and_dont_parse();
//    return false; //disable actual click
//}

//function getTagString() {
//    var tagString = ""
//    $.each(selected_tags, function() {
//        tagString = tagString + " #" + this;
//    });
//    return tagString;
//}

//function checkCSS() {
//    $.each($(".select_tag"), function() {
//        if ($.inArray($(this).html(), selected_tags) > -1) {
//            $(this).addClass("on");
//        }
//        else if ($(this).hasClass("on")) $(this).removeClass("on");
//    });
//}


//function update_tags() {

//    //get rid of multiple spaces...
//    var txt = new RegExp("\\s\\s+");
//    $("#tags").val($("#tags").val().replace(txt, " "));
//    //just in case a single \t or \n is present
//    txt = new RegExp("\\s+");
//    //var txt = new RegExp("\\s\\s*"); 
//    var tagString = $("#tags").val().replace(txt, " ").trim();
//    $("#tags").val(tagString);
//    //if(selected_tags.length>0) 
//    if (tagString != "" && tagString != " ")
//        selected_tags = tagString.split(" ");
//    else selected_tags = [];
//    var selectedTagsHTML = $(selected_tags).map(function() {
//        return "#" + this;
//    }).get().join(", ");

//    $("#selected_tags").html(selectedTagsHTML);

//    var json_url = build_tags_query(this.container.tags_uri);
//    $.getJSON(json_url, function(context) {
//        tags = context.tags_json.overall;
//        var tagString = "";
//        //var fixedTags = main_widget.get_fixed_tags();
//        $.each(tags, function() {
//            if (this.type != "loc" && this.type != "currency" && this.tag != group/*$.inArray(this.tag,fixedTags)<=-1*/) {
//                var on = "";
//                var endon = "";
//                if (($.inArray(this.tag, selected_tags) > -1)) {
//                    on = "<li class=\"on\">";
//                    endon = "</li>";
//                }
//                else {
//                    on = "<li>";
//                    endon = "</li>";
//                }
//                tagString = (tags === "") ? this.tag : tagString + "\n" + on + "<a href=\"#\" class=\"select_tag\">" + this.tag + "</a>" + endon;
//            }
//        });

//        //alert(tagString);
//        //if (!(typeof suggested_tags_render_fn == 'function')) {
//        //if not yet compiled compile it
//        /*    compile_render_fn();
//		
//		var render = $p.render('suggested_tags_render_fn', tags);
//        */
//        $('#suggested_tags').html(tagString);
//        $("#suggested_tags .select_tag").click(ontag_click);
//    });
//}


//function build_tags_query(baseUrl) {
//    if (tags.length == 0) return baseUrl + "?jsoncallback=?";
//    var query = "";
//    $.each(tags, function() {
//        if ($.inArray(this.tag, selected_tags) > -1)
//            query = query + this.type + "=" + escape(this.tag) + "&";
//    });
//    query = query.substring(0, query.length - 1);
//    return baseUrl + "?" + query + "&jsoncallback=?";
//}

</script>
</body>
</html>
